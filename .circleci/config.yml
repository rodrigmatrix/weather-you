version: 2.1

orbs:
  android: circleci/android@3.0.0  # Use the latest version of the Android orb

jobs:
  build-and-upload-to-play:
    executor:
      name: android/android_machine
      resource_class: medium  # Adjust resource class as needed
      tag: default
    steps:
      - checkout

      # Change directory to weather-you
      - run:
          name: Change directory to weather-you
          command: cd weather-you

      # Restore Gradle cache using CircleCI's built-in caching
      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "build.gradle" }}

      # Load .env file and export variables
      - run:
          name: Load .env file
          command: |
            if [ -f .env ]; then
              export $(grep -v '^#' .env | xargs)
            fi

      # Install Fastlane
      - run:
          name: Install Fastlane
          command: |
            sudo gem install fastlane -NV

      # Build .aab files
      - run:
          name: Build .aab files
          command: ./gradlew :app:bundleRelease :tv:bundleRelease

      # Upload .aab files to Google Play Console using Fastlane
      - run:
          name: Upload to Google Play Console
          command: |
            cd android  # Navigate to the Android project directory if needed
            fastlane supply \
              --aab app/build/outputs/bundle/release/app-release.aab \
              --track internal \
              --json_key <(echo $GOOGLE_PLAY_KEY | base64 --decode)

      # Save Gradle cache using CircleCI's built-in caching
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-cache-{{ checksum "build.gradle" }}

  build-and-upload-to-artifacts:
    executor:
      name: android/android_machine
      resource_class: medium  # Adjust resource class as needed
      tag: default
    steps:
      - checkout

      # Change directory to weather-you
      - run:
          name: Change directory to weather-you
          command: cd weather-you

      # Restore Gradle cache using CircleCI's built-in caching
      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "build.gradle" }}

      # Load .env file and export variables
      - run:
          name: Load .env file
          command: |
            if [ -f .env ]; then
              export $(grep -v '^#' .env | xargs)
            fi

      # Build .apk files
      - run:
          name: Build .apk files
          command: ./gradlew :app:assembleRelease :tv:assembleRelease

      # Upload .apk files to CircleCI artifacts
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
          destination: app-release.apk
      - store_artifacts:
          path: tv/build/outputs/apk/release/tv-release.apk
          destination: tv-release.apk

      # Save Gradle cache using CircleCI's built-in caching
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-cache-{{ checksum "build.gradle" }}

workflows:
  version: 2
  upload-to-play:
    jobs:
      - build-and-upload-to-play:
          filters:
            branches:
              only: 
                - main
                - dev

  upload-to-artifacts:
    jobs:
      - build-and-upload-to-artifacts:
          filters:
            branches:
              ignore: 
                - main
                - dev